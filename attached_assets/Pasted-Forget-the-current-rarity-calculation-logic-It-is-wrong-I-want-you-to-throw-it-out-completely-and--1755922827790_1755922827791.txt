Forget the current rarity calculation logic. It is wrong. I want you to throw it out completely and rebuild rarity using the same data we already generate for “Other Top Answers.”

Here’s exactly how to do it:

1. Reuse the existing unsliced WS-sorted list
   - You are already generating a Win Shares–descending eligible players list for each grid cell in order to show the “Other Top Answers.”
   - Fetch that exact unsliced list (the one before it is sliced to the top 10 for display).
   - Do not rebuild anything new. Just expose that full list so rarity can use it.

2. Rarity calculation
   - Let `fullList` = the unsliced WS-descending array of eligible players.
   - Let `N = fullList.length`.
   - Find the guessed player’s index in that list: `idx` (0-based).
   - Formula:
       - If `N == 1`: rarity = 50, rank = 1
       - Else: `rarity = round(100 * idx / (N - 1))`
   - So idx = 0 (top of list, most common) → rarity 0  
     idx = N-1 (bottom of list, rarest) → rarity 100
   - rank = idx + 1

3. Save rarity results
   - Save `rarity`, `rank`, and `N` on the cell state so both the tile and modal can use them.

4. UI updates
   - On the grid tile, show a small chip in the corner with the rarity score (0–100).
   - Chip colors: red at 0 → green at 100 (gradient).
   - In the player modal, add a new “Rarity” section ABOVE “Teams” that shows:
       - Tier label based on rarity:
         • 0–9: Ultra common
         • 10–24: Very common
         • 25–39: Common
         • 40–59: Notable
         • 60–74: Rare
         • 75–89: Very rare
         • 90–100: Ultra rare
       - Line: “Ranked {rank} out of {N} eligible players”
       - Tiny hint line: “Higher rank = rarer”
   - Keep “Teams” and “Other Top Answers” exactly as they are, still only showing the top 10 slice.

5. Debug logging (temporary, to confirm it’s correct)
   - When a player is guessed, log:
       console.debug("fullList size", N);
       console.debug("picked idx", idx, "rank", rank, "rarity", rarity);
   - Sanity check: picking a top star (like LeBron) should log rarity close to 0 and rank 1. Picking a deep cut should log rarity close to 100 and rank close to N.